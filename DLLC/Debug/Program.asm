; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.61030.0 

	TITLE	E:\Dokumenty Koziol\GRZEGORZ\Dysk Google\Grzesiek\Dokumenty\STUDIA\JA\Projekt\Hasla\DLLC\Program.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_startTime
PUBLIC	_endTime
PUBLIC	_resultTime
PUBLIC	_endTimefull
PUBLIC	_startTimefull
PUBLIC	_CPUInfo
PUBLIC	_bSSE41Extensions
PUBLIC	_bSSE42Extensions
PUBLIC	_nLogicalProcessors
PUBLIC	_nFeatureInfo
PUBLIC	_bMultithreading
_DATA	SEGMENT
COMM	___@@_PchSym_@00@UwlpfnvmgbLplarloUtiavtliaUwbhpLtlltovUtiavhrvpUwlpfnvmgbUhgfwrzUqzUkilqvpgUszhozUwooxUwvyftUhgwzucOlyq@7523FF6FB403CA84:DWORD
_DATA	ENDS
_BSS	SEGMENT
_startTime DD	01H DUP (?)
_endTime DD	01H DUP (?)
_resultTime DD	01H DUP (?)
_endTimefull DD	01H DUP (?)
_startTimefull DD 01H DUP (?)
_bSSE41Extensions DB 01H DUP (?)
	ALIGN	4

_bSSE42Extensions DB 01H DUP (?)
	ALIGN	4

_nLogicalProcessors DD 01H DUP (?)
_nFeatureInfo DD 01H DUP (?)
_bMultithreading DB 01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
_CPUInfo DD	0ffffffffH
	ORG $+12
_DATA	ENDS
PUBLIC	_GetNameOfFile
PUBLIC	_getSearchedWord
PUBLIC	_findAllEntries
PUBLIC	_findAllEntriesCounted
PUBLIC	_output
PUBLIC	_outputDatabaseScreen
PUBLIC	_outputDatabaseFile
PUBLIC	_clean
PUBLIC	_startProgram
PUBLIC	_startProgramWithThreads
PUBLIC	_useSpeedToFindOneFile
PUBLIC	_setPointers
PUBLIC	_searchThreadCounted@4
PUBLIC	_searchThreadUncounted@4
PUBLIC	_readNumberOfLogicalUnits
PUBLIC	??_C@_0O@FIENMJNC@Brak?5wynikow?$CB?$AA@	; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0L@FADCIPKF@data?2A?4txt?$AA@		; `string'
PUBLIC	??_C@_0BC@HJOJEJNA@Tryb?5normalny?4?4?5?6?$AA@	; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
PUBLIC	??_C@_0CB@JHNJPOB@Execution?5time?5for?5?$CFd?5units?3?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BB@JMANOGFA@Tryb?5szybki?4?4?4?5?6?$AA@	; `string'
EXTRN	__imp__strstr:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fflush:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__fputs:PROC
EXTRN	__imp__getchar:PROC
EXTRN	__imp__printf:PROC
EXTRN	__imp__puts:PROC
EXTRN	__imp___itoa:PROC
EXTRN	__imp__calloc:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__imp___beginthreadex:PROC
EXTRN	__imp___endthreadex:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	_newEntry:PROC
EXTRN	_addEntryToList:PROC
EXTRN	_readEntriesFromFile:PROC
EXTRN	_getNumberOfEntries:PROC
EXTRN	_setPackage:PROC
EXTRN	_deletePackage:PROC
EXTRN	_openFileAndGetNumberOfElements:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0BB@JMANOGFA@Tryb?5szybki?4?4?4?5?6?$AA@
CONST	SEGMENT
??_C@_0BB@JMANOGFA@Tryb?5szybki?4?4?4?5?6?$AA@ DB 'Tryb szybki... ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JHNJPOB@Execution?5time?5for?5?$CFd?5units?3?5?$CFd?6@
CONST	SEGMENT
??_C@_0CB@JHNJPOB@Execution?5time?5for?5?$CFd?5units?3?5?$CFd?6@ DB 'Exec'
	DB	'ution time for %d units: %d', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HJOJEJNA@Tryb?5normalny?4?4?5?6?$AA@
CONST	SEGMENT
??_C@_0BC@HJOJEJNA@Tryb?5normalny?4?4?5?6?$AA@ DB 'Tryb normalny.. ', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FADCIPKF@data?2A?4txt?$AA@
CONST	SEGMENT
??_C@_0L@FADCIPKF@data?2A?4txt?$AA@ DB 'data\A.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FIENMJNC@Brak?5wynikow?$CB?$AA@
CONST	SEGMENT
??_C@_0O@FIENMJNC@Brak?5wynikow?$CB?$AA@ DB 'Brak wynikow!', 00H ; `string'
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _readNumberOfLogicalUnits
_TEXT	SEGMENT
_readNumberOfLogicalUnits PROC				; COMDAT
; File e:\dokumenty koziol\grzegorz\dysk google\grzesiek\dokumenty\studia\ja\projekt\hasla\dllc\program.c
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 319
	mov	eax, 1
	xor	ecx, ecx
	cpuid
	mov	esi, OFFSET _CPUInfo
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], ebx
	mov	DWORD PTR [esi+8], ecx
	mov	DWORD PTR [esi+12], edx
; Line 320
	mov	eax, 4
	shl	eax, 0
	mov	eax, DWORD PTR _CPUInfo[eax]
	sar	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	sub	eax, 1
; Line 321
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_readNumberOfLogicalUnits ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _searchThreadUncounted@4
_TEXT	SEGMENT
_database$ = -32					; size = 4
_results$ = -20						; size = 4
_pack$ = -8						; size = 4
_arg$ = 8						; size = 4
_searchThreadUncounted@4 PROC				; COMDAT
; File e:\dokumenty koziol\grzegorz\dysk google\grzesiek\dokumenty\studia\ja\projekt\hasla\dllc\program.c
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 304
	mov	eax, DWORD PTR _arg$[ebp]
	mov	DWORD PTR _pack$[ebp], eax
; Line 305
	mov	DWORD PTR _results$[ebp], 0
	mov	DWORD PTR _database$[ebp], 0
; Line 307
	mov	eax, DWORD PTR _pack$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_readEntriesFromFile
	add	esp, 4
	mov	DWORD PTR _database$[ebp], eax
; Line 308
	mov	eax, DWORD PTR _database$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pack$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_findAllEntries
	add	esp, 8
	mov	DWORD PTR _results$[ebp], eax
; Line 309
	mov	eax, DWORD PTR _pack$[ebp]
	mov	ecx, DWORD PTR _results$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 310
	mov	esi, esp
	mov	eax, DWORD PTR _pack$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 311
	mov	eax, DWORD PTR _pack$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 312
	mov	esi, esp
	push	0
	call	DWORD PTR __imp___endthreadex
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 314
	xor	eax, eax
; Line 315
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_searchThreadUncounted@4 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _searchThreadCounted@4
_TEXT	SEGMENT
_results$ = -20						; size = 4
_pack$ = -8						; size = 4
_arg$ = 8						; size = 4
_searchThreadCounted@4 PROC				; COMDAT
; File e:\dokumenty koziol\grzegorz\dysk google\grzesiek\dokumenty\studia\ja\projekt\hasla\dllc\program.c
; Line 291
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 292
	mov	eax, DWORD PTR _arg$[ebp]
	mov	DWORD PTR _pack$[ebp], eax
; Line 293
	mov	DWORD PTR _results$[ebp], 0
; Line 295
	mov	eax, DWORD PTR _pack$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _pack$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _pack$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_findAllEntriesCounted
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _results$[ebp], eax
; Line 296
	mov	eax, DWORD PTR _pack$[ebp]
	mov	ecx, DWORD PTR _results$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 297
	mov	esi, esp
	push	0
	call	DWORD PTR __imp___endthreadex
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 299
	xor	eax, eax
; Line 300
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_searchThreadCounted@4 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _setPointers
_TEXT	SEGMENT
_counter$ = -44						; size = 4
_i$ = -32						; size = 4
_tmp$ = -20						; size = 4
_tab$ = -8						; size = 4
_database$ = 8						; size = 4
_indicators$ = 12					; size = 4
_setPointers PROC					; COMDAT
; File e:\dokumenty koziol\grzegorz\dysk google\grzesiek\dokumenty\studia\ja\projekt\hasla\dllc\program.c
; Line 272
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 273
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _nLogicalProcessors
	push	eax
	call	DWORD PTR __imp__calloc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tab$[ebp], eax
; Line 274
	mov	eax, DWORD PTR _database$[ebp]
	mov	DWORD PTR _tmp$[ebp], eax
; Line 275
	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _counter$[ebp], 1
; Line 277
	jmp	SHORT $LN5@setPointer
$LN4@setPointer:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@setPointer:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _nLogicalProcessors
	jge	SHORT $LN3@setPointer
$LN2@setPointer:
; Line 279
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _indicators$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _counter$[ebp]
	cmp	eax, DWORD PTR [edx]
	jge	SHORT $LN1@setPointer
; Line 281
	mov	eax, DWORD PTR _tmp$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _tmp$[ebp], ecx
; Line 282
	mov	eax, DWORD PTR _counter$[ebp]
	add	eax, 1
	mov	DWORD PTR _counter$[ebp], eax
; Line 283
	jmp	SHORT $LN2@setPointer
$LN1@setPointer:
; Line 284
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	edx, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 285
	jmp	SHORT $LN4@setPointer
$LN3@setPointer:
; Line 287
	mov	eax, DWORD PTR _tab$[ebp]
; Line 288
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_setPointers ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _useSpeedToFindOneFile
_TEXT	SEGMENT
_counter2$ = -128					; size = 4
_counter$ = -116					; size = 4
_diff$ = -104						; size = 4
_leftentries$ = -92					; size = 4
_i$ = -80						; size = 4
_entryptr$ = -68					; size = 4
_results$ = -56						; size = 4
_hThreads$ = -44					; size = 4
_packages$ = -32					; size = 4
_threadid$ = -20					; size = 4
_tab$ = -8						; size = 4
_word$ = 8						; size = 4
_database$ = 12						; size = 4
_useSpeedToFindOneFile PROC				; COMDAT
; File e:\dokumenty koziol\grzegorz\dysk google\grzesiek\dokumenty\studia\ja\projekt\hasla\dllc\program.c
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 228
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _nLogicalProcessors
	push	eax
	call	DWORD PTR __imp__calloc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tab$[ebp], eax
; Line 229
	mov	DWORD PTR _threadid$[ebp], 0
; Line 230
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _nLogicalProcessors
	push	eax
	call	DWORD PTR __imp__calloc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _packages$[ebp], eax
; Line 231
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _nLogicalProcessors
	push	eax
	call	DWORD PTR __imp__calloc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hThreads$[ebp], eax
; Line 233
	mov	DWORD PTR _results$[ebp], 0
; Line 234
	mov	DWORD PTR _i$[ebp], 0
	mov	eax, DWORD PTR _database$[ebp]
	push	eax
	call	_getNumberOfEntries
	add	esp, 4
	mov	DWORD PTR _leftentries$[ebp], eax
	mov	eax, DWORD PTR _leftentries$[ebp]
	cdq
	idiv	DWORD PTR _nLogicalProcessors
	mov	DWORD PTR _diff$[ebp], eax
	mov	DWORD PTR _counter$[ebp], 0
	mov	DWORD PTR _counter2$[ebp], 0
; Line 236
	jmp	SHORT $LN12@useSpeedTo
$LN11@useSpeedTo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@useSpeedTo:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _nLogicalProcessors
	jge	SHORT $LN10@useSpeedTo
; Line 238
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__malloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _tab$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 239
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _counter$[ebp]
	mov	DWORD PTR [edx], eax
; Line 240
	mov	eax, DWORD PTR _counter$[ebp]
	add	eax, DWORD PTR _diff$[ebp]
	mov	DWORD PTR _counter$[ebp], eax
; Line 241
	mov	eax, DWORD PTR _diff$[ebp]
	neg	eax
	mov	DWORD PTR _leftentries$[ebp], eax
; Line 242
	jmp	SHORT $LN11@useSpeedTo
$LN10@useSpeedTo:
; Line 244
	mov	eax, DWORD PTR _tab$[ebp]
	push	eax
	mov	ecx, DWORD PTR _database$[ebp]
	push	ecx
	call	_setPointers
	add	esp, 8
	mov	DWORD PTR _entryptr$[ebp], eax
; Line 245
	mov	DWORD PTR _i$[ebp], 0
; Line 246
	jmp	SHORT $LN9@useSpeedTo
$LN8@useSpeedTo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@useSpeedTo:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _nLogicalProcessors
	jge	$LN7@useSpeedTo
; Line 248
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__malloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _hThreads$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 249
	mov	eax, DWORD PTR _diff$[ebp]
	sub	eax, 1
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _entryptr$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR _word$[ebp]
	push	ecx
	call	_setPackage
	add	esp, 20					; 00000014H
	mov	edx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _packages$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
; Line 250
	mov	esi, esp
	lea	eax, DWORD PTR _threadid$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _packages$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	push	OFFSET _searchThreadCounted@4
	push	0
	push	0
	call	DWORD PTR __imp___beginthreadex
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _hThreads$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR [ecx], eax
; Line 251
	jmp	$LN8@useSpeedTo
$LN7@useSpeedTo:
; Line 252
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@useSpeedTo
$LN5@useSpeedTo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@useSpeedTo:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _nLogicalProcessors
	jge	SHORT $LN4@useSpeedTo
; Line 254
	mov	esi, esp
	push	-1
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _hThreads$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 255
	jmp	SHORT $LN5@useSpeedTo
$LN4@useSpeedTo:
; Line 257
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@useSpeedTo
$LN2@useSpeedTo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@useSpeedTo:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _nLogicalProcessors
	jge	$LN1@useSpeedTo
; Line 259
	mov	eax, DWORD PTR _results$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _packages$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_addEntryToList
	add	esp, 8
	mov	DWORD PTR _results$[ebp], eax
; Line 260
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _hThreads$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	esi, esp
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 261
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _hThreads$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 262
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 263
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _entryptr$[ebp]
	mov	DWORD PTR [ecx+eax*4], 0
; Line 264
	jmp	$LN2@useSpeedTo
$LN1@useSpeedTo:
; Line 265
	mov	esi, esp
	mov	eax, DWORD PTR _hThreads$[ebp]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 266
	mov	esi, esp
	mov	eax, DWORD PTR _tab$[ebp]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 267
	mov	esi, esp
	mov	eax, DWORD PTR _entryptr$[ebp]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 268
	mov	eax, DWORD PTR _results$[ebp]
; Line 269
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@useSpeedTo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN17@useSpeedTo:
	DD	1
	DD	$LN16@useSpeedTo
$LN16@useSpeedTo:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN15@useSpeedTo
$LN15@useSpeedTo:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
_useSpeedToFindOneFile ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _startProgramWithThreads
_TEXT	SEGMENT
tv80 = -352						; size = 4
_database$ = -152					; size = 4
_packages$ = -140					; size = 4
_hThreads$ = -128					; size = 4
_filename$ = -116					; size = 11
_threadid$ = -96					; size = 4
_lastfor$ = -84						; size = 4
_counter$ = -72						; size = 4
_threadcounter$ = -60					; size = 4
_listlength$ = -48					; size = 4
_results$ = -36						; size = 4
_fileptr2$ = -24					; size = 4
_fileptr$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_wordtofind$ = 8					; size = 4
_outputfilename$ = 12					; size = 4
_startProgramWithThreads PROC				; COMDAT
; File e:\dokumenty koziol\grzegorz\dysk google\grzesiek\dokumenty\studia\ja\projekt\hasla\dllc\program.c
; Line 156
	push	ebp
	mov	ebp, esp
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 157
	mov	DWORD PTR _fileptr$[ebp], 0
	mov	DWORD PTR _fileptr2$[ebp], 0
; Line 158
	mov	DWORD PTR _results$[ebp], 0
; Line 159
	mov	DWORD PTR _listlength$[ebp], 0
	mov	DWORD PTR _threadcounter$[ebp], 0
	mov	DWORD PTR _counter$[ebp], 0
	call	_readNumberOfLogicalUnits
	mov	DWORD PTR _nLogicalProcessors, eax
	mov	eax, DWORD PTR _nLogicalProcessors
	mov	DWORD PTR _lastfor$[ebp], eax
; Line 160
	mov	DWORD PTR _threadid$[ebp], 0
; Line 161
	mov	eax, DWORD PTR ??_C@_0L@FADCIPKF@data?2A?4txt?$AA@
	mov	DWORD PTR _filename$[ebp], eax
	mov	ecx, DWORD PTR ??_C@_0L@FADCIPKF@data?2A?4txt?$AA@+4
	mov	DWORD PTR _filename$[ebp+4], ecx
	mov	dx, WORD PTR ??_C@_0L@FADCIPKF@data?2A?4txt?$AA@+8
	mov	WORD PTR _filename$[ebp+8], dx
	mov	al, BYTE PTR ??_C@_0L@FADCIPKF@data?2A?4txt?$AA@+10
	mov	BYTE PTR _filename$[ebp+10], al
; Line 162
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _nLogicalProcessors
	push	eax
	call	DWORD PTR __imp__calloc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hThreads$[ebp], eax
; Line 163
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _nLogicalProcessors
	push	eax
	call	DWORD PTR __imp__calloc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _packages$[ebp], eax
; Line 164
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _nLogicalProcessors
	push	eax
	call	DWORD PTR __imp__calloc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _database$[ebp], eax
; Line 165
	cmp	DWORD PTR _nLogicalProcessors, 0
	jne	SHORT $LN21@startProgr
	mov	DWORD PTR tv80[ebp], 1
	jmp	SHORT $LN22@startProgr
$LN21@startProgr:
	mov	eax, DWORD PTR _nLogicalProcessors
	mov	DWORD PTR tv80[ebp], eax
$LN22@startProgr:
	mov	ecx, DWORD PTR tv80[ebp]
	mov	DWORD PTR _nLogicalProcessors, ecx
; Line 166
	mov	esi, esp
	push	OFFSET ??_C@_0BB@JMANOGFA@Tryb?5szybki?4?4?4?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 167
	mov	esi, esp
	call	DWORD PTR __imp__timeGetTime@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _startTimefull, eax
$LN18@startProgr:
; Line 168
	mov	eax, 1
	test	eax, eax
	je	$LN17@startProgr
$LN16@startProgr:
; Line 170
	mov	eax, DWORD PTR _threadcounter$[ebp]
	cmp	eax, DWORD PTR _nLogicalProcessors
	jge	$LN15@startProgr
; Line 172
	mov	esi, esp
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 173
	lea	eax, DWORD PTR _listlength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_openFileAndGetNumberOfElements
	add	esp, 8
	mov	DWORD PTR _fileptr$[ebp], eax
; Line 174
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__malloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _threadcounter$[ebp]
	mov	edx, DWORD PTR _hThreads$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 175
	push	0
	mov	eax, DWORD PTR _fileptr$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _wordtofind$[ebp]
	push	ecx
	call	_setPackage
	add	esp, 20					; 00000014H
	mov	edx, DWORD PTR _threadcounter$[ebp]
	mov	ecx, DWORD PTR _packages$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
; Line 176
	cmp	DWORD PTR _fileptr$[ebp], 0
	je	SHORT $LN14@startProgr
; Line 177
	mov	esi, esp
	lea	eax, DWORD PTR _threadid$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _threadcounter$[ebp]
	mov	edx, DWORD PTR _packages$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	push	OFFSET _searchThreadUncounted@4
	push	0
	push	0
	call	DWORD PTR __imp___beginthreadex
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _threadcounter$[ebp]
	mov	edx, DWORD PTR _hThreads$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN13@startProgr
$LN14@startProgr:
; Line 178
	mov	eax, DWORD PTR _threadcounter$[ebp]
	mov	ecx, DWORD PTR _hThreads$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [edx], 0
$LN13@startProgr:
; Line 180
	mov	eax, DWORD PTR _counter$[ebp]
	add	eax, 1
	mov	DWORD PTR _counter$[ebp], eax
; Line 181
	mov	eax, DWORD PTR _threadcounter$[ebp]
	add	eax, 1
	mov	DWORD PTR _threadcounter$[ebp], eax
; Line 182
	mov	eax, 1
	imul	eax, 5
	mov	cl, BYTE PTR _filename$[ebp+eax]
	add	cl, 1
	mov	edx, 1
	imul	edx, 5
	mov	BYTE PTR _filename$[ebp+edx], cl
; Line 183
	mov	eax, 1
	imul	eax, 5
	movsx	ecx, BYTE PTR _filename$[ebp+eax]
	cmp	ecx, 90					; 0000005aH
	jle	SHORT $LN12@startProgr
; Line 185
	mov	eax, DWORD PTR _threadcounter$[ebp]
	mov	DWORD PTR _lastfor$[ebp], eax
; Line 186
	jmp	SHORT $LN15@startProgr
$LN12@startProgr:
; Line 188
	jmp	$LN16@startProgr
$LN15@startProgr:
; Line 190
	mov	DWORD PTR _threadcounter$[ebp], 0
	jmp	SHORT $LN11@startProgr
$LN10@startProgr:
	mov	eax, DWORD PTR _threadcounter$[ebp]
	add	eax, 1
	mov	DWORD PTR _threadcounter$[ebp], eax
$LN11@startProgr:
	mov	eax, DWORD PTR _threadcounter$[ebp]
	cmp	eax, DWORD PTR _nLogicalProcessors
	jge	SHORT $LN9@startProgr
	mov	eax, DWORD PTR _threadcounter$[ebp]
	cmp	eax, DWORD PTR _lastfor$[ebp]
	jge	SHORT $LN9@startProgr
; Line 192
	mov	esi, esp
	push	-1
	mov	eax, DWORD PTR _threadcounter$[ebp]
	mov	ecx, DWORD PTR _hThreads$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 193
	jmp	SHORT $LN10@startProgr
$LN9@startProgr:
; Line 195
	mov	DWORD PTR _threadcounter$[ebp], 0
	jmp	SHORT $LN8@startProgr
$LN7@startProgr:
	mov	eax, DWORD PTR _threadcounter$[ebp]
	add	eax, 1
	mov	DWORD PTR _threadcounter$[ebp], eax
$LN8@startProgr:
	mov	eax, DWORD PTR _threadcounter$[ebp]
	cmp	eax, DWORD PTR _nLogicalProcessors
	jge	$LN6@startProgr
	mov	eax, DWORD PTR _threadcounter$[ebp]
	cmp	eax, DWORD PTR _lastfor$[ebp]
	jge	$LN6@startProgr
; Line 197
	mov	eax, DWORD PTR _results$[ebp]
	push	eax
	mov	ecx, DWORD PTR _threadcounter$[ebp]
	mov	edx, DWORD PTR _packages$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_addEntryToList
	add	esp, 8
	mov	DWORD PTR _results$[ebp], eax
; Line 198
	mov	eax, DWORD PTR _threadcounter$[ebp]
	mov	ecx, DWORD PTR _hThreads$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN5@startProgr
; Line 199
	mov	eax, DWORD PTR _threadcounter$[ebp]
	mov	ecx, DWORD PTR _hThreads$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	esi, esp
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@startProgr:
; Line 200
	mov	esi, esp
	mov	eax, DWORD PTR _threadcounter$[ebp]
	mov	ecx, DWORD PTR _hThreads$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 201
	mov	esi, esp
	mov	eax, DWORD PTR _threadcounter$[ebp]
	mov	ecx, DWORD PTR _database$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 202
	mov	eax, DWORD PTR _threadcounter$[ebp]
	mov	ecx, DWORD PTR _packages$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_deletePackage
	add	esp, 4
; Line 203
	jmp	$LN7@startProgr
$LN6@startProgr:
; Line 205
	cmp	DWORD PTR _counter$[ebp], 25		; 00000019H
	jl	SHORT $LN4@startProgr
; Line 206
	jmp	SHORT $LN17@startProgr
; Line 207
	jmp	SHORT $LN3@startProgr
$LN4@startProgr:
; Line 208
	mov	DWORD PTR _threadcounter$[ebp], 0
$LN3@startProgr:
; Line 209
	jmp	$LN18@startProgr
$LN17@startProgr:
; Line 210
	mov	esi, esp
	call	DWORD PTR __imp__timeGetTime@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _endTimefull, eax
; Line 211
	mov	eax, DWORD PTR _endTimefull
	sub	eax, DWORD PTR _startTimefull
	mov	DWORD PTR _resultTime, eax
; Line 212
	mov	esi, esp
	mov	eax, DWORD PTR _resultTime
	push	eax
	mov	ecx, DWORD PTR _nLogicalProcessors
	push	ecx
	push	OFFSET ??_C@_0CB@JHNJPOB@Execution?5time?5for?5?$CFd?5units?3?5?$CFd?6@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 213
	mov	esi, esp
	call	DWORD PTR __imp__getchar
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 214
	cmp	DWORD PTR _outputfilename$[ebp], 0
	je	SHORT $LN2@startProgr
; Line 215
	mov	eax, DWORD PTR _outputfilename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileptr2$[ebp]
	push	ecx
	push	2
	mov	edx, DWORD PTR _results$[ebp]
	push	edx
	call	_output
	add	esp, 16					; 00000010H
; Line 216
	jmp	SHORT $LN1@startProgr
$LN2@startProgr:
; Line 217
	push	0
	push	0
	push	1
	mov	eax, DWORD PTR _results$[ebp]
	push	eax
	call	_output
	add	esp, 16					; 00000010H
$LN1@startProgr:
; Line 218
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, 32					; 00000020H
	imul	ecx, 0
	add	eax, ecx
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__fflush
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 219
	mov	esi, esp
	call	DWORD PTR __imp__getchar
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 220
	mov	eax, DWORD PTR _results$[ebp]
	push	eax
	call	_clean
	add	esp, 4
; Line 221
	mov	esi, esp
	mov	eax, DWORD PTR _packages$[ebp]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 222
	mov	esi, esp
	mov	eax, DWORD PTR _hThreads$[ebp]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 223
	mov	esi, esp
	mov	eax, DWORD PTR _database$[ebp]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 224
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@startProgr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN27@startProgr:
	DD	3
	DD	$LN26@startProgr
$LN26@startProgr:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN23@startProgr
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN24@startProgr
	DD	-116					; ffffff8cH
	DD	11					; 0000000bH
	DD	$LN25@startProgr
$LN25@startProgr:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN24@startProgr:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN23@startProgr:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
_startProgramWithThreads ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _startProgram
_TEXT	SEGMENT
_filename$ = -80					; size = 11
_listlength$ = -60					; size = 4
_result$ = -48						; size = 4
_database$ = -36					; size = 4
_fileptr2$ = -24					; size = 4
_fileptr$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_wordtofind$ = 8					; size = 4
_outputfilename$ = 12					; size = 4
_startProgram PROC					; COMDAT
; File e:\dokumenty koziol\grzegorz\dysk google\grzesiek\dokumenty\studia\ja\projekt\hasla\dllc\program.c
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 126
	mov	DWORD PTR _fileptr$[ebp], 0
	mov	DWORD PTR _fileptr2$[ebp], 0
; Line 127
	mov	DWORD PTR _database$[ebp], 0
	mov	DWORD PTR _result$[ebp], 0
; Line 128
	mov	DWORD PTR _listlength$[ebp], 0
; Line 129
	mov	eax, DWORD PTR ??_C@_0L@FADCIPKF@data?2A?4txt?$AA@
	mov	DWORD PTR _filename$[ebp], eax
	mov	ecx, DWORD PTR ??_C@_0L@FADCIPKF@data?2A?4txt?$AA@+4
	mov	DWORD PTR _filename$[ebp+4], ecx
	mov	dx, WORD PTR ??_C@_0L@FADCIPKF@data?2A?4txt?$AA@+8
	mov	WORD PTR _filename$[ebp+8], dx
	mov	al, BYTE PTR ??_C@_0L@FADCIPKF@data?2A?4txt?$AA@+10
	mov	BYTE PTR _filename$[ebp+10], al
; Line 130
	mov	esi, esp
	push	OFFSET ??_C@_0BC@HJOJEJNA@Tryb?5normalny?4?4?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 131
	mov	esi, esp
	call	DWORD PTR __imp__timeGetTime@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _startTimefull, eax
; Line 133
	jmp	SHORT $LN6@startProgr
$LN5@startProgr:
	mov	eax, 1
	imul	eax, 5
	mov	cl, BYTE PTR _filename$[ebp+eax]
	add	cl, 1
	mov	edx, 1
	imul	edx, 5
	mov	BYTE PTR _filename$[ebp+edx], cl
$LN6@startProgr:
	mov	eax, 1
	imul	eax, 5
	movsx	ecx, BYTE PTR _filename$[ebp+eax]
	cmp	ecx, 90					; 0000005aH
	jg	SHORT $LN4@startProgr
; Line 135
	lea	eax, DWORD PTR _listlength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_openFileAndGetNumberOfElements
	add	esp, 8
	mov	DWORD PTR _fileptr$[ebp], eax
; Line 136
	mov	esi, esp
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 137
	mov	eax, DWORD PTR _fileptr$[ebp]
	push	eax
	call	_readEntriesFromFile
	add	esp, 4
	mov	DWORD PTR _database$[ebp], eax
; Line 138
	cmp	DWORD PTR _database$[ebp], 0
	je	SHORT $LN3@startProgr
; Line 139
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _database$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wordtofind$[ebp]
	push	edx
	call	_findAllEntries
	add	esp, 8
	push	eax
	call	_addEntryToList
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
$LN3@startProgr:
; Line 140
	jmp	$LN5@startProgr
$LN4@startProgr:
; Line 141
	mov	esi, esp
	call	DWORD PTR __imp__timeGetTime@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _endTimefull, eax
; Line 142
	mov	eax, DWORD PTR _endTimefull
	sub	eax, DWORD PTR _startTimefull
	mov	DWORD PTR _resultTime, eax
; Line 143
	mov	esi, esp
	mov	eax, DWORD PTR _resultTime
	push	eax
	mov	ecx, DWORD PTR _nLogicalProcessors
	push	ecx
	push	OFFSET ??_C@_0CB@JHNJPOB@Execution?5time?5for?5?$CFd?5units?3?5?$CFd?6@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 144
	mov	esi, esp
	call	DWORD PTR __imp__getchar
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 145
	cmp	DWORD PTR _outputfilename$[ebp], 0
	je	SHORT $LN2@startProgr
; Line 146
	mov	eax, DWORD PTR _outputfilename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileptr2$[ebp]
	push	ecx
	push	2
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	call	_output
	add	esp, 16					; 00000010H
; Line 147
	jmp	SHORT $LN1@startProgr
$LN2@startProgr:
; Line 148
	push	0
	push	0
	push	1
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_output
	add	esp, 16					; 00000010H
$LN1@startProgr:
; Line 150
	mov	esi, esp
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 151
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_clean
	add	esp, 4
; Line 154
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@startProgr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN12@startProgr:
	DD	2
	DD	$LN11@startProgr
$LN11@startProgr:
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN9@startProgr
	DD	-80					; ffffffb0H
	DD	11					; 0000000bH
	DD	$LN10@startProgr
$LN10@startProgr:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN9@startProgr:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
_startProgram ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _clean
_TEXT	SEGMENT
_tmp$ = -8						; size = 4
_database$ = 8						; size = 4
_clean	PROC						; COMDAT
; File e:\dokumenty koziol\grzegorz\dysk google\grzesiek\dokumenty\studia\ja\projekt\hasla\dllc\program.c
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 109
	mov	DWORD PTR _tmp$[ebp], 0
; Line 111
	cmp	DWORD PTR _database$[ebp], 0
	jne	SHORT $LN2@clean
; Line 112
	jmp	SHORT $LN4@clean
$LN2@clean:
; Line 113
	cmp	DWORD PTR _database$[ebp], 0
	je	SHORT $LN4@clean
; Line 115
	mov	eax, DWORD PTR _database$[ebp]
	mov	DWORD PTR _tmp$[ebp], eax
; Line 116
	mov	eax, DWORD PTR _database$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _database$[ebp], ecx
; Line 117
	mov	esi, esp
	mov	eax, DWORD PTR _tmp$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 118
	mov	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR [eax], 0
; Line 119
	mov	esi, esp
	mov	eax, DWORD PTR _tmp$[ebp]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 120
	mov	DWORD PTR _tmp$[ebp], 0
; Line 121
	jmp	SHORT $LN2@clean
$LN4@clean:
; Line 122
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_clean	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _outputDatabaseFile
_TEXT	SEGMENT
_tmpfile$ = -20						; size = 4
_tmp$ = -8						; size = 4
_database$ = 8						; size = 4
_fileptr$ = 12						; size = 4
_filename$ = 16						; size = 4
_outputDatabaseFile PROC				; COMDAT
; File e:\dokumenty koziol\grzegorz\dysk google\grzesiek\dokumenty\studia\ja\projekt\hasla\dllc\program.c
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 89
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp__malloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tmp$[ebp], eax
; Line 90
	mov	DWORD PTR _tmpfile$[ebp], 0
; Line 91
	cmp	DWORD PTR _database$[ebp], 0
	je	$LN3@outputData
; Line 93
	mov	esi, esp
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tmpfile$[ebp], eax
; Line 94
	mov	esi, esp
	mov	eax, DWORD PTR _tmpfile$[ebp]
	push	eax
	mov	edi, esp
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _database$[ebp]
	push	edx
	call	_getNumberOfEntries
	add	esp, 4
	push	eax
	call	DWORD PTR __imp___itoa
	add	esp, 12					; 0000000cH
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 95
	mov	esi, esp
	mov	eax, DWORD PTR _tmpfile$[ebp]
	push	eax
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@outputData:
; Line 96
	cmp	DWORD PTR _database$[ebp], 0
	je	SHORT $LN3@outputData
; Line 98
	mov	esi, esp
	mov	eax, DWORD PTR _tmpfile$[ebp]
	push	eax
	mov	ecx, DWORD PTR _database$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 99
	mov	esi, esp
	mov	eax, DWORD PTR _tmpfile$[ebp]
	push	eax
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 100
	mov	eax, DWORD PTR _database$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _database$[ebp], ecx
; Line 101
	jmp	SHORT $LN2@outputData
$LN3@outputData:
; Line 103
	mov	esi, esp
	mov	eax, DWORD PTR _tmpfile$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 104
	mov	esi, esp
	mov	eax, DWORD PTR _tmp$[ebp]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_outputDatabaseFile ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _outputDatabaseScreen
_TEXT	SEGMENT
_database$ = 8						; size = 4
_outputDatabaseScreen PROC				; COMDAT
; File e:\dokumenty koziol\grzegorz\dysk google\grzesiek\dokumenty\studia\ja\projekt\hasla\dllc\program.c
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 76
	cmp	DWORD PTR _database$[ebp], 0
	je	SHORT $LN4@outputData
$LN3@outputData:
; Line 77
	cmp	DWORD PTR _database$[ebp], 0
	je	SHORT $LN2@outputData
; Line 79
	mov	esi, esp
	mov	eax, DWORD PTR _database$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__puts
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 80
	mov	eax, DWORD PTR _database$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _database$[ebp], ecx
; Line 81
	jmp	SHORT $LN3@outputData
$LN2@outputData:
; Line 82
	jmp	SHORT $LN5@outputData
$LN4@outputData:
; Line 83
	mov	esi, esp
	push	OFFSET ??_C@_0O@FIENMJNC@Brak?5wynikow?$CB?$AA@
	call	DWORD PTR __imp__puts
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@outputData:
; Line 84
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_outputDatabaseScreen ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _output
_TEXT	SEGMENT
_database$ = 8						; size = 4
_opt$ = 12						; size = 4
_fileptr$ = 16						; size = 4
_filename$ = 20						; size = 4
_output	PROC						; COMDAT
; File e:\dokumenty koziol\grzegorz\dysk google\grzesiek\dokumenty\studia\ja\projekt\hasla\dllc\program.c
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 59
	cmp	DWORD PTR _opt$[ebp], 0
	je	SHORT $LN9@output
; Line 61
	cmp	DWORD PTR _fileptr$[ebp], 0
	je	SHORT $LN7@output
	cmp	DWORD PTR _filename$[ebp], 0
	je	SHORT $LN7@output
; Line 62
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _database$[ebp]
	push	edx
	call	_outputDatabaseFile
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN9@output
$LN7@output:
; Line 63
	cmp	DWORD PTR _opt$[ebp], 1
	jne	SHORT $LN5@output
; Line 64
	mov	eax, DWORD PTR _database$[ebp]
	push	eax
	call	_outputDatabaseScreen
	add	esp, 4
	jmp	SHORT $LN9@output
$LN5@output:
; Line 65
	cmp	DWORD PTR _opt$[ebp], 2
	jne	SHORT $LN9@output
; Line 67
	cmp	DWORD PTR _fileptr$[ebp], 0
	je	SHORT $LN1@output
	cmp	DWORD PTR _filename$[ebp], 0
	jne	SHORT $LN2@output
$LN1@output:
; Line 68
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _database$[ebp]
	push	edx
	call	_outputDatabaseFile
	add	esp, 12					; 0000000cH
$LN2@output:
; Line 69
	mov	eax, DWORD PTR _database$[ebp]
	push	eax
	call	_outputDatabaseScreen
	add	esp, 4
$LN9@output:
; Line 72
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_output	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _findAllEntriesCounted
_TEXT	SEGMENT
_tmpcounter$ = -32					; size = 4
_tmpptr$ = -20						; size = 4
_results$ = -8						; size = 4
_wordtofind$ = 8					; size = 4
_database$ = 12						; size = 4
_counter$ = 16						; size = 4
_findAllEntriesCounted PROC				; COMDAT
; File e:\dokumenty koziol\grzegorz\dysk google\grzesiek\dokumenty\studia\ja\projekt\hasla\dllc\program.c
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 39
	mov	DWORD PTR _results$[ebp], 0
	mov	DWORD PTR _tmpptr$[ebp], 0
; Line 40
	mov	DWORD PTR _tmpcounter$[ebp], 0
; Line 42
	cmp	DWORD PTR _database$[ebp], 0
	jne	SHORT $LN5@findAllEnt
; Line 43
	xor	eax, eax
	jmp	SHORT $LN7@findAllEnt
$LN5@findAllEnt:
; Line 44
	cmp	DWORD PTR _database$[ebp], 0
	je	SHORT $LN4@findAllEnt
; Line 46
	mov	esi, esp
	mov	eax, DWORD PTR _wordtofind$[ebp]
	push	eax
	mov	ecx, DWORD PTR _database$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@findAllEnt
; Line 47
	mov	eax, DWORD PTR _results$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _database$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_newEntry
	add	esp, 8
	push	eax
	call	_addEntryToList
	add	esp, 8
	mov	DWORD PTR _results$[ebp], eax
$LN3@findAllEnt:
; Line 48
	mov	eax, DWORD PTR _database$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _database$[ebp], ecx
; Line 49
	mov	eax, DWORD PTR _tmpcounter$[ebp]
	cmp	eax, DWORD PTR _counter$[ebp]
	jne	SHORT $LN2@findAllEnt
; Line 50
	jmp	SHORT $LN4@findAllEnt
	jmp	SHORT $LN1@findAllEnt
$LN2@findAllEnt:
; Line 51
	mov	eax, DWORD PTR _tmpcounter$[ebp]
	add	eax, 1
	mov	DWORD PTR _tmpcounter$[ebp], eax
$LN1@findAllEnt:
; Line 52
	jmp	SHORT $LN5@findAllEnt
$LN4@findAllEnt:
; Line 53
	mov	eax, DWORD PTR _results$[ebp]
$LN7@findAllEnt:
; Line 54
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_findAllEntriesCounted ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _findAllEntries
_TEXT	SEGMENT
_tmpptr2$ = -32						; size = 4
_tmpptr$ = -20						; size = 4
_results$ = -8						; size = 4
_wordtofind$ = 8					; size = 4
_database$ = 12						; size = 4
_findAllEntries PROC					; COMDAT
; File e:\dokumenty koziol\grzegorz\dysk google\grzesiek\dokumenty\studia\ja\projekt\hasla\dllc\program.c
; Line 16
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 17
	mov	DWORD PTR _results$[ebp], 0
	mov	eax, DWORD PTR _database$[ebp]
	mov	DWORD PTR _tmpptr$[ebp], eax
	mov	DWORD PTR _tmpptr2$[ebp], 0
; Line 19
	cmp	DWORD PTR _database$[ebp], 0
	jne	SHORT $LN5@findAllEnt
; Line 20
	xor	eax, eax
	jmp	$LN7@findAllEnt
$LN5@findAllEnt:
; Line 21
	cmp	DWORD PTR _database$[ebp], 0
	je	SHORT $LN2@findAllEnt
; Line 23
	mov	esi, esp
	mov	eax, DWORD PTR _wordtofind$[ebp]
	push	eax
	mov	ecx, DWORD PTR _database$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@findAllEnt
; Line 24
	mov	eax, DWORD PTR _results$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _database$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_newEntry
	add	esp, 8
	push	eax
	call	_addEntryToList
	add	esp, 8
	mov	DWORD PTR _results$[ebp], eax
$LN3@findAllEnt:
; Line 25
	mov	esi, esp
	mov	eax, DWORD PTR _database$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 26
	mov	eax, DWORD PTR _database$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _database$[ebp], ecx
; Line 27
	jmp	SHORT $LN5@findAllEnt
$LN2@findAllEnt:
; Line 28
	cmp	DWORD PTR _tmpptr$[ebp], 0
	je	SHORT $LN1@findAllEnt
; Line 30
	mov	eax, DWORD PTR _tmpptr$[ebp]
	mov	DWORD PTR _tmpptr2$[ebp], eax
; Line 31
	mov	eax, DWORD PTR _tmpptr$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _tmpptr$[ebp], ecx
; Line 32
	mov	esi, esp
	mov	eax, DWORD PTR _tmpptr2$[ebp]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 33
	jmp	SHORT $LN2@findAllEnt
$LN1@findAllEnt:
; Line 34
	mov	eax, DWORD PTR _results$[ebp]
$LN7@findAllEnt:
; Line 35
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_findAllEntries ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _getSearchedWord
_TEXT	SEGMENT
_tab$ = 8						; size = 4
_getSearchedWord PROC					; COMDAT
; File e:\dokumenty koziol\grzegorz\dysk google\grzesiek\dokumenty\studia\ja\projekt\hasla\dllc\program.c
; Line 10
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 11
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [ecx+eax]
; Line 12
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_getSearchedWord ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetNameOfFile
_TEXT	SEGMENT
_tab$ = 8						; size = 4
_GetNameOfFile PROC					; COMDAT
; File e:\dokumenty koziol\grzegorz\dysk google\grzesiek\dokumenty\studia\ja\projekt\hasla\dllc\program.c
; Line 5
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 6
	mov	eax, 4
	imul	eax, 3
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [ecx+eax]
; Line 7
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetNameOfFile ENDP
_TEXT	ENDS
END
